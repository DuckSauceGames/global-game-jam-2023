name: Thorough Review
on:
  pull_request_review:
    types: [submitted]

jobs:
  comment:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: GIF Filter
        id: gif-filter
        if: github.event.review.state == 'approved' || github.event.review.state == 'changes_requested'
        uses: actions/github-script@v6
        with:
          script: |
            const goodOptions = ['lgtm', 'party', 'yes', 'success', 'approve', 'noice'];
            
            return {
              approved: goodOptions[Math.floor(Math.random()*goodOptions.length)],
              changes_requested: 'no',
            }['${{ github.event.review.state }}']
          result-encoding: string

      - name: Fetch GIF
        id: fetch-gif
        if: ${{ steps.gif-filter.outputs.result }}
        uses: fjogeleit/http-request-action@v1.12.0
        with:
          url: 'https://api.giphy.com/v1/gifs/random?tag=${{ steps.gif-filter.outputs.result }}&api_key=${{ secrets.GIPHY_API_KEY }}'
          method: 'GET'
          
      - name: Post GIF
        if: ${{ fromJson(steps.fetch-gif.outputs.response).data.images.downsized.url }}
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            
            const resp = await github.rest.pulls.createReview({
              owner,
              repo,
              pull_number: ${{ github.event.pull_request.number }},
              body: '![](${{ fromJson(steps.fetch-gif.outputs.response).data.images.downsized.url }})',
              comments: [],
            });

            await github.rest.pulls.submitReview({
              owner,
              repo,
              pull_number: ${{ github.event.pull_request.number }},
              review_id: resp.data.id,
              event: 'COMMENT',
            });
